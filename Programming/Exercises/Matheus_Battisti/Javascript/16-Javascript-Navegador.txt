//Protocolos
-Um protocolo é uma forma de comunicação entre computadores através da rede;
-o HTTP, serve para nós solicitarmos arquivos, imagens e etc (Hyper Text Transfer Protocol);
-Entramos em sites graças ao protocolo HTTP;
-SMTP = protocolos para enviar e-mail.
-TCP = protocolo de transferência;

//URL
-Cada arquivo que carrega no navegador é nomeado por uma URL;
-A URL (uniform resource locator) pode ser dividida em três partes: protocolo, servidor e arquivo;
- http = protocolo; index.html=arquivo;

//HTML
-HTML (HyperTExt Markup Language) é uma linguagem de marcação;
-Responsável pelos textos e elementos que vemos na tela ao acessar uma página web;
-As tags do HTML criam: títulos, parágrafos, imagens, listas e etc.
-uma tag é definida por <p></p>;
-Obs: Algumas tags não possuem fechamento;

//HTML parte 2
-Todo documento HTML tem sempre duas partes importantes: head e body
-O head serve para configurações do documento, como links de folha de estilo ou até de scripts de javaScript;
-Tags de configuração:meta, link;
-O body para os elementos(tags), ou seja, a parte visual;
-Tags do body: p,h1,div,ul,li;

//HTML e o JS
-Podemos utilizar JavaScript no HTML por meio da tag script;
-Ou linkar um arquivo .js por meio de script com o atributo src (forma mais utilizada);
-Algumas tags HTML aceitam atributos que executam JS, mas não é muito utilizado;
-Lembrando que sempre que linkamos um arquivo externo, estamos chamando ele via protocolo HTTP;

//a estrutura HTML e o DOM
-Quando uma página web é requisitada, ela recebe um texto que é transformado em uma estrutura HTML;
-As tags vão se aninhando uma ás outras, formando uma estrutura em que elementos ficam dentro dos outros;
-Essa estrutura tem uma representação exatamente igual para o JS chamada de DOM;
Que significa Document OBject Model;
-E por meio do JS podemos acessar cada um destes elementos do HTML através do DOM;

//O DOM
-Podemos mudar completamente uma página HTML através do DOM;
-É possível alterar: elementos, atributos, CSS;
-Além de alterar podemos adicionar e também remover;
-Além de ser possível criar eventos na página, como animações;

//a árvore do DOM 
-O documento HTML seria a árvore completa;
-A raiz da árvore éo Document (só a uma raiz);
-Cada elemento da árvore chamamos de node(nó);
-Conteúdos como texto são chamados de leaf nodes(as folhas);

//Movendo-se através do DOM
-Podemos acessar todos os elementos a partir de document.body;
-A partir dele vamos entrando nos childNodes;
-E depois acessando as prorpiedades que nos interessam;

//Encontrando elementos
-Podemos encontrar elementos de uma forma mais fácil do que se movendo pelo DOM;
-Como no HTML temos tags, classes e ids, o javaScript nos possibilita utilizar estas características para encontrar o que desejamos;
-Há alguns métodos para isto: getElementsByTagName, GetElementsById, getElementsByClassName, e também o querySelector;

//Encontrando elementos: por tag
-Utilizamos o seguinte método para encontrar elementos pela tag:
-"document.getElementByTagName('h1')";

//Encontrando elementos: por id
-Utilizamos o seguinte método para encontrar elementos por id:
-"document.getElementByid("algum-id")";

//Encontrando elementos: por query
-Um método que se assemelha a grande funcionalidade do jQuery;
-Nos permitindo encontrar elementos pelo seus seletores de CSS;
-O que facilita muito nossa vida;

//Alterando o HTML
-Podemos mudar quase tudo através da DOM;
-Adicionar, remover e clonar elementos;
-Podemos utilizar métodos como: insertBefore, appendChil e replaceChild;
-Vamos ver em detalhes como utilizar cada um destes;

//Alterando a DOM com insertBefore
-Insere um nó antes do nó de referência do método;
-Precisamos de um elementos para ser adicionado;
-O elemento que terá o outro elemento adicionado antes dele;
-E o elemento pai destes dois;

//Alterando a DOM com appendChild
-Adiciona um nó após todos os elementos do elemento pai;
-Consegue trocar um elemento por completo tendo outro como base;

//Modificando e lendo atributos
-Podemos resgatar o valor de um atributo ou trocar com o js;
-Por exemplo o href de um a ou o src de um elemento img;
-getAttribute pega o valor;
-setAttribute atualiza o valor;

//Posição do elemento na tela
-Também é possível checar a posição do elemento na tela;
-GetBoundingCliendREct nos da as posições de top, left, right, bottom do elemento e outras informações;

//Estilizando com JS
-Podemos também mudar as propriedades de estilo dos elementos do HTML com o JS;
-Acessando a propriedade style podemos fazer as modificações;
-O estilo é manipulado direto na tag, ou seja, substitui o do CSS (na maioria das vezes);