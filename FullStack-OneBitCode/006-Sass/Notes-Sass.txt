************************************************

//SSaS
-Desenvolvimento front end
-Syntactically Awesome Style Sheets
-pré-processado (escrevemos em sass e depois ele vira css)
-2 modelos: sass e scss
-Organiza o código por meio de divisões
-facilidade (variáveis, imports, funções)
- "sass --watch sass/style.scss:css/style.css"

//Variáveis
-Serve para encurtar o trabalho se for alterar as cores futuramente
- $

//Nesting
-Conseguimos alterar elementos do nesting com mais facilidade, economizando linhas de código

//Divisões dos arquivos 
-Podemos criar uma pasta chamada "sass", e depois outras pastas com arquivos, e então importar tudo para o arquivo style principal
- "@import "link/da/pagina";"

//Mixin
-Podemos utilizar duas propriedades ao mesmo tempo
- "@mixin nome_variável($..., $..., $...) {...:$... ;}"
- "@include nome_variável(propriedade, propriedade, propriedade)"

//Heranças e extends
-Similar ao nesting porém com classes
-Utilizar &.nome_da_classe dentro do classe pai. Só funciona as duas classes juntas
-Para o extends, "@extend .nome_da_classe"

//Boas práticas com Sass GVMBYMBXVX 9BWLB05U9AP089665 00191278874
-Útil para nós mesmo e para futuros programadores fazerem a manutenção do código
-Criar dentro da pasta sass pastas como pages, variables, common (elementos comuns entre todas as páginas)
-Comentar e importar as páginas
-Escolher nome das variáveis que seja de fácil identificação
-Utilizar o mixing, aplicando o @include na página quando se tratar de várias prorpiedades juntas

//Function em sass
-utilizar a documentação para usar as funções pré-definidas
-podemos criar com "@function" "@if" "@return"

//Minify
-junta todo o código css para economizar código
-não faz diferença em pequenos sites, porém faz diferença com códigos grandes
- "sass sass/style.scss:css/style.css --style compressed"
