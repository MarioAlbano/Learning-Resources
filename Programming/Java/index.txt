--------------------------
***Introduction to Java***

//What's Java?
-High-level, objected oriented programming language. Developed by Sun Microsystems, now owned by Oracle
-Platform independence, can run on different operationg systems without modification

//Java Feaatures
-Write Once, Run Anywhere (WORA) if that has Java Virtual Machine 
-Object-Oriented, emphasizing the use of objects and classes
-Platform independence
-Strongly Typed
-Automatic Memory Management
-Rich Standard Library

//Java History
-Created by James Gosling and his team at Sun Microsystem in the early 1990s
-Originally designed for embedded systems but later gained popularity in web  development
-Java has gone through severeal versions, with each bringing new features and improvements

//Usage
-Web development (Java Servlets, JSP)
-Android app development 
-Enterprise software development
-Scientific and financial applications
-Gam development (LibGDX)
-internet of things (loT) projects
-And More

//How to start
-Install the JDK (necessary for writing, compiling, and running Java programs)
-Setting up the IDE (to make the development easier)
-Write simple projects that use basic syntax of Java

//Starting
-public class name_file{}
-public static void main(String[] args){}
-'psvm' shortcut
-System.out.print("Something here")
-'sout' shortcut
-Shift + F10 to start program

//Data Types and Variable
-placeholder for the value
-list:
------------------------------------------------------------------------------------
  * boolean | 1 bit | primitive | true or false 
  byte | 1 byte | primitive | -128 to 127
  short | 2 bytes | primitive | -32,768 to 32,767
  * int | 4 bytes | primitive | -2 billion to 2 billion
  long | 8 bytes | primitive | -9 quintllion to 9 quintillion

  float | 4 bytes | primitive | fractional number up to 6-7 digits ex. 3.1415592f
  * double | 8 bytes | primitive | fractional number up to 15 ex. 3.141559248579651

  * char | 2 bytes | primitive | single character/letter/ASCII value ex. 'f'
  * String | varies | primitive | a sequence of characters ex. "Hello world"
------------------------------------------------------------------------------------
-Primitive: 8 types (boolean, byte, etc.), stores data, can only hold 1 value, less memory, fast
-reference: unlimited (user defined), store an address, could hold more than 1 value, more memory, slower
-using variable: int x = 123;
-change values between variables? create a third variable and aloque them

//User input
-import java.util.Scanner;