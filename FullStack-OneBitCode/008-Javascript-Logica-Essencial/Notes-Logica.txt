//O que é uma linguagem de programação
-Conjunto de códigos que tem instruções para o computador
-Diferentes de linguagens de marcação e estilização
-Podem ser de alto nível(mais próxima da linguagem humana) ou baixo nível (mais proxima da linguagem do computador)
-Podem ser compiladas ou interpretadas

//Javascript
-Nome oficial ECMAScript. De alto nível e interpretada
-Multiparadigma
-Principal linguagem de programação usada pelos navegadores web
-Junto com HTML e CSS forma a web
-Pode ser usada fora do navegador através de runtimes como o node

//Tipos de dados
-Formas de representar dados
-Primitivos: As mais simples (number e bigint, string, boolean, null e undefined)
-Objetos e funções

//Variáveis
-Armazenam dados para usá-los no código
-Criando variáveis: var, let, const
-Nomeando variáveis: Nomes significativos, camelCase

//Operadores e expressões
-Operadores: aritméticos, agrupamento, atribuição, encadeamento, incremento e decremento

//Comentários
-Linhas do código que serão ignoradas
-Servem para ajudar a entender o código

//Recursos nativos do navegador
-console.log()
-console.error()
-console.warn()
-window.alert()
-window.prompt()
-window.confirm()
-document
-\n

//Comparação de dados
-Retornam um boolean
-Operadores ( ==, ===, !=, !==, >, >=, <, <= )

//Operadores lógicos
E(&&): Só verdadeiro se ambas foram verdadeiras
Ou(||): Só é falso se ambas forem falsas
Not(!): Inverte o resultado

//Estruturas condicionais
-Permite criar blocos de códigos que serão executadas somente quando uma determinada operação lógica for verdadeira
-Se o bloco de cima for falso, pode ser adicionado ELSE para acrescentar mais um bloco
-Operador ternário: Forma abreviada e autoavaliada do IF ELSE

//Switch
-Permite criar blocos como se fosse o IF, porém com vários casos
-Podemos definir algo para que se repita sempre
-Podemos parar a execução após algum caso

//While
-Estrutura de repetição
-Aceita o break para parar a repetição
-Atenção: precisa de uma condição falsa para não ter loop infinito

//Do while
-Parecido com o while, porém executa pelo menos uma vez o bloco mesmo que seja falsa
-Basicamente executa o do, e se a condição do while for verdadeira, refaz denovo a condição do do

//For
-Também serve para repetições, porém diferente do while e do while
-Exemplo é quando queremos iterar um número
-inicialização ; condição ; finalização