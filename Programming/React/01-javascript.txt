//Por que devemos aprender react?
-Uma das bibliotecas mais requisitadads pelo mercado de trabalho
-Desenvolvimento de sites, sistemas web

//Começando pelo Javascript
-Podemos utilizar o console do navegador
-Podemos utilizar um JS externo

//Variáveis
-Podemos usar var
-Mais utilizado é let e const
-keyword = palavras reservadas

//comentário
-linha única = //
-multi linhas = /**/

//Comandos de entrada
-usar o prompt para guardar informações

//Dom
-Utilizar id em um elemento e usar o document.getElementById("nomeDoElemento").innerHTML

//Array
-forma de organizar dados, podendo monipulálos, inserir ou remover
-.indexOf() faz achar algo no array, se devolver -1 ele não existe
-.join() ajunta os elementos com o parâmetro que nós passamos
-.pop() remove último elemento da lista
-.shift remove o primeiro da lista
-para alterar um elemento, só precimos acessar o array[indice] = novaModificação
-.push() insere no final do array
-.unshift() insere no início do array
-if(lista.indexOf("nomeProcurado") > -1){} é um jeito de fazer uma condição baseado se encontra ou não algo no array

//Loop
-Podemos usar o While, For para repetições
-Muito útil nos programas
-Também podemos usar o switch case para escolhas

//Temporarização
-Executa de tempos em tempos, e outro que após um tempo ele executa
-setInterval(minhaFuncao, 1000); No caso ela chama uma função e executa de 1 em 1 segundo
-setTimeout(minhaFuncao, 3000); No caso chama a função após um tempo e encerra
-clearInterval(variavelDoTemporizador); se colocado numa variavel, consegue parar o temporizador

//Webstorage
-Salvar dados que o usuário deixo antes de sair
-localStorage: salva localmente, então não perde. Para criar: localStorage.setItem("nome", "Mario"); Para obter: localStorage.getItem("nome"); Para deletar: localStorage.removeItem("nome");
-Outra forma de usar seria: localStorage.nome = "Mario";. Não funciona com o remover
-sessionStorage: salva no navegador, se fechar ele se perde

//Var, const, let
-Var consegue sair de escopos, atrapalhando as vezes o desenvolvimento
-let e const conseguem ser acessados somente dentro do escopo

//Desconstruindo arrays e objetos
-Para objetos: let {nome} = pessoa; Com isso consegue extrair e armazenar em uma variável. Podemos criar mais de uma variável ao mesmo tempo. Para renomear basta que utilize let {nome:myName} = pessoa;
-Para array basta que apontemos o índice: let {0:segundonome, 2: idade} = nomes; Um outro jeito seria: let [nome, sobrenome, idade] = nomes;

//Spread operator
-Uma forma simplificada de unir array e objetos;
-Para array: let numeros = [...primeiros,4,5,6];