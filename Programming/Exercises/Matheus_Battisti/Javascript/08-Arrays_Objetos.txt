***ARRAYS E OBJETOS***

//Array
-Possibilidade de adicionar um conjunto de valores a uma variável;
-o array deve ser escrito entre colchetes, separando os valores por vírgulas;
-Ex: let numeros = [1,2,3,4,5,6,7,8]; let informacoes = ["Mario", 12, true, "testando"];
-Ex: let container = ["Mario", 26, "Single", "Brazillian", 1995];

//Mais sobre Arrays
-Podemos acessar um array pelo seu índice, por exemplo: arr[0];
-Lembrando que a contagem começa em 0;


//Propriedades
-Propriedades são informações que podem ser verificadas de um valor;
-Quase todos os valores de JavaScript tem propriedades, menos null e undefined
-Podemos acessar as propriedades de duas maneiras;

//Métodos
-Métodos são prorpiedades que funcionam como funções;
-Strings e arrays contém métodos;
-Serve para transformar o dado ou tirar um valor para fazer algo lógico com isso.
-Ex: propriedade: string.prorpiedade  método: string.metodo;

//O que são objetos;
-Uma coleção de propriedades, parecidos com arrays;
-Podemos acessar estas prorpiedades;
-Ex: let objeto = {obj1: 1, obj2:2,};

//Objetos: Deletando e criando propriedades
-Podemos adicionar e deletar prorpiedades ao longo do nosso programa;

//Mais sobre objetos
-Podemos copiar todas as propriedades de um objeto para outro;

//Mais sobre objetos
-Também podemos verificar quais as chaves cada objeto possui;


//Mutação (Mutability)
-Um objeto pode herdar todas as características do outro, virando uma referência ao mesmo;

//Loops em Arrays
-Uma técnica muito utilizada na programação é o loop nos arrays;
-Como é uma lista com muitos valores, muitas vezes precisamos ver cada um deles;

//Métodos de array: push e pop
-push serve para inserir um elemento no array;
-pop serve para remover um elemento no array;
-Ex: let removerNomes = nomes.pop(); nomes.push("Juana");

//Métodos de array: shift e unshift
-shift: remove o primeiro elemento de um array;
-unshift: adiciona um ou mais elementos no início de um array;

//Métodos de array: indexOf e lastIndexOf
-indexOf: encontra o índice de um determinado elemento;
-lastIndexOf:encontrar o último índice de um elemento;

//Métodos de array: slice
-Retorna um array a partir de outro array;
-o array retornado é determinados pelos parâmetros que são as índices de início e fim do novo array;
-Ex: console.log(numeros.slice(2,3)); /* está dizendo que entre 2 e 3, escolher o array antes de 3 */

//Métodos de array:forEach
-itera cada elemento do array;


//Métodos de array: includes;
-Verifica se o array tem um determinado elemento;
-pode ser trabalhado com o if para determinar uma lógica;

//Métodos de array: reverse;
-Faz com que revertemos a ordem dos arrays;

//Métodos de string: trim
-Remove tudo que não é string;
-Bom para poupar caractéres desnecessários quando for enviar pro servidor;


//Métodos de string: padStart;
-Inserir caracteres antes da string;
-Ex: console.log(product.padStart(10, "9")); /*Diz que para o numero do "product", para preencher até 10 dígites com o número 9*/;

//Métodos de string: split
-Divide uma string por um separador, e retorna um array;

//Métodos de string: join
-Junta elementos de um array em uma frase, por meio de um separador;

//Métodos de string: repeat
-Repete uma string de acordo com um parâmetro number;
-Ex: console.log(word.repeat(400)); /*Repetirá a word 400x*/

//Rest operator ***
-Uma forma de uma função receber indefinidos parâmetros;
-o operador rest vai virar um array;
-o parâmetro é definido por: ...nomeParâmetro;

//Destructuring com objetos
-Desestrutura um objeto em variáveis;

//Destructuring com array
-Podemos definir variáveis com os valres de um array utilizando o destructuring;

//JSON 
-JSON = JavaScript Object Notation;
-Utilizado para comunicação entre serviços, ex:back end <-> front end;
-Ou seja, comunicar com api ou receber os dados via api;
-basicamente um tipo de dado padronizado, que lembra muito os objetos do JavaScript; 

//Mais sobre JSON 
-Rigoroso na estrutura, ou seja, você deve seguir o padrão imposto por este formato;
-Apenas aspas duplas;
-Não aceita comentários;

//JSON para String
-Podemos converter o JSON para uma string de forma fácil;
-Ou também uma string para JSON;

//Array vs Objeto
-Para agrupar informações que só fazem sentido juntas iremos utilizar objetos. 
-Quando queremos agrupar informações que por si só já fazem sentido iremos utilizar arrays