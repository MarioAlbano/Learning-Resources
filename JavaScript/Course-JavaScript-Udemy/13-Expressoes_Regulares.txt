				****REGEX****

//Expressão regulares
-Uma forma de encontrar padrões em uma string;
-Por exemplo: validar se só tem números;
-Em vez de criarmos funções complexas, podemos encontrar dados em texto por meio das expressões regulares;
-Também chamadas de regex;

//Como criar uma expressão regular
-As expressões regulares no JS são um tipo de objeto;
-Podemos instancia-lo de duas formas;
-New RegExp e /.../;

//Testando o Regex
let regenxTwo = /guerra/;
console.log(regenxTwo.test("Hoje na segunda")); //Vai dizer que é falso
ou
console.log(/teste/.test("teste")); //retornaria true

//Conjunto de caracteres
-Podemos definir um conjhunto de caracteres para encontrar por regex;
-basta por entre [];
-com um traço podemos definir um intervalo também;

//Caracteres especiais
\d - 0 a 9;
\w - a-z, A-Z, 0-9, incluindo _ 
\s - Espaço em branco
\D - Não digitos
\W - Não letras
\S - Não espaço em branco
.  - Qualquer caractere, menos nova linha

//Operador not ^
-Podemos escrever um set que aceitam tudo,menos alguns caracteres com o not;
-Lembrando que combinações serão aceitas, o negadoé apenas se bate com o set;
-Mais adiante aprenderemos negar de outras formas;

//Operador plus +
-Quando um + está após alguma expressão, este elemento pode se repetir mais de uma vez;

//Operador ?
-Faz com que o dígito anterior seja opcional;

//Ocorrência precisa
-Inserir o número de ocorrência entre {};

//Método exec
-O método exec nops retorna um objeto com algumas informações sobre a regex;
-Se nada for encontrado, retorna null;

//Método match
-O método match funciona de forma similar ao exec;

//Choice pattern
-Podemos colocar uma instrução na regex que funciona como um ||(or) das condicionais;

//Validando um domínio
-Desse modo podemos validar um domínio:
